layer.name = "shapefile",
color = "red", map.type = "Esri.WorldImagery")
coords <- c(-81.892,
47.934)
m@map %>% setView(coords[1], coords[2], zoom = 17)
road1
#--- test on single road ---#
road1 <- shp %>%
dplyr::filter(OBJECTID == 30032)
plot(ctg)
plot(road1,add=TRUE)
mapview::mapview(road1,
layer.name = "shapefile",
color = "red", map.type = "Esri.WorldImagery")
m <- mapview::mapview(road1,
layer.name = "shapefile",
color = "red", map.type = "Esri.WorldImagery")
coords <- c(-81.892,
47.934)
m@map %>% setView(coords[1], coords[2], zoom = 17)
road1
road1
#--- test on single road ---#
road2 <- shp %>%
dplyr::filter(OBJECTID == 29976)
plot(ctg)
plot(road1,add=TRUE)
m <- mapview::mapview(road2,
layer.name = "shapefile",
color = "red", map.type = "Esri.WorldImagery")
coords <- c(-81.892,
47.934)
m@map %>% setView(coords[1], coords[2], zoom = 17)
#--- test on single road ---#
road2 <- shp %>%
dplyr::filter(OBJECTID == 29976)
plot(ctg)
plot(road1,add=TRUE)
shp %>%
dplyr::filter(OBJECTID == 29976)
plot(road2)
#--- test on single road ---#
road2 <- shp %>%
dplyr::filter(OBJECTID == 29976)
plot(ctg)
plot(road2,add=TRUE)
mapview::mapview(road2,
layer.name = "shapefile",
color = "red", map.type = "Esri.WorldImagery")
#--- test on single road ---#
road2 <- shp %>%
dplyr::filter(OBJECTID == 29976)
plot(ctg)
plot(road2,add=TRUE)
m <- mapview::mapview(road2,
layer.name = "shapefile",
color = "red", map.type = "Esri.WorldImagery")
coords <- c(-81.89471,
47.93648)
m@map %>% setView(coords[1], coords[2], zoom = 17)
#--- test on single road ---#
road1 <- shp %>%
dplyr::filter(OBJECTID == 30032)
plot(ctg)
plot(road1,add=TRUE)
m <- mapview::mapview(road1,
layer.name = "shapefile",
color = "red", map.type = "Esri.WorldImagery")
coords <- c(-81.89212,
47.93482)
m@map %>% setView(coords[1], coords[2], zoom = 17)
#--- test on single road ---#
road1 <- shp %>%
dplyr::filter(OBJECTID == 30032)
plot(ctg)
plot(road1,add=TRUE)
m <- mapview::mapview(road1,
layer.name = "shapefile",
color = "red", map.type = "Esri.WorldImagery")
coords <- c(-81.89212,
47.93482)
m@map %>% setView(coords[1], coords[2], zoom = 17)
#--- test on single road ---#
roadx <- shp %>%
dplyr::filter(OBJECTID == 30032)
plot(ctg)
plot(road1,add=TRUE)
m <- mapview::mapview(roadx,
layer.name = "shapefile",
color = "red", map.type = "Esri.WorldImagery")
coords <- c(-81.89212,
47.93482)
m@map %>% setView(coords[1], coords[2], zoom = 17)
roadx
m1 <- mapview::mapview(roadx,
layer.name = "shapefile",
color = "red", map.type = "Esri.WorldImagery")
coords <- c(-81.89212,
47.93482)
m1@map %>% setView(coords[1], coords[2], zoom = 17)
#--- test on single road ---#
roadx <- shp %>%
dplyr::filter(OBJECTID == 30032)
plot(ctg)
plot(road1,add=TRUE)
m1 <- mapview::mapview(roadx,
layer.name = "shapefile",
color = "red", map.type = "Esri.WorldImagery")
coords <- c(-81.89212,
47.93482)
m1@map %>% setView(coords[1], coords[2], zoom = 17)
#--- test on single road ---#
road2 <- shp %>%
dplyr::filter(OBJECTID == 29976)
plot(ctg)
plot(road2,add=TRUE)
m <- mapview::mapview(road2,
layer.name = "shapefile",
color = "red", map.type = "Esri.WorldImagery")
coords <- c(-81.89471,
47.93648)
m@map %>% setView(coords[1], coords[2], zoom = 17)
roadx <- shp %>%
dplyr::filter(OBJECTID == 30032)
plot(ctg)
plot(roadx,add=TRUE)
mapview::mapview(roadx,
layer.name = "shapefile",
color = "red", map.type = "Esri.WorldImagery")
m1@map
library(lidR)
library(sf)
library(MFFProads)
library(dplyr)
library(terra)
library(leaflet)
#--- read in laz and road shapefile ---#
ctg <- readLAScatalog("F:/_2021_MFPProads/RMF/RMF_roads_SPL/1kmZ174330530902018L/split")
shp <- st_read("F:/_2021_MFPProads/RMF/RMF_roads_SPL/1kmZ174330530902018L/roads_1kmZ174330530902018L.shp",quiet=TRUE)
plot(ctg)
plot(shp,add=TRUE)
mapview::mapview(shp, layer.name = "shapefile",
color = "red", map.type = "Esri.WorldImagery")
library(lidR)
library(sf)
library(MFFProads)
library(dplyr)
library(terra)
library(leaflet)
#--- read in laz and road shapefile ---#
ctg <- readLAScatalog("F:/_2021_MFPProads/RMF/RMF_roads_SPL/1kmZ174330530902018L/split")
shp <- st_read("F:/_2021_MFPProads/RMF/RMF_roads_SPL/1kmZ174330530902018L/roads_1kmZ174330530902018L.shp",quiet=TRUE)
# plot(ctg)
# plot(shp,add=TRUE)
mapview::mapview(list(ctg,shp), layer.name = "shapefile",
color = "red", map.type = "Esri.WorldImagery")
library(lidR)
library(sf)
library(MFFProads)
library(dplyr)
library(terra)
library(leaflet)
#--- read in laz and road shapefile ---#
ctg <- readLAScatalog("F:/_2021_MFPProads/RMF/RMF_roads_SPL/1kmZ174330530902018L/split")
shp <- st_read("F:/_2021_MFPProads/RMF/RMF_roads_SPL/1kmZ174330530902018L/roads_1kmZ174330530902018L.shp",quiet=TRUE)
# plot(ctg)
# plot(shp,add=TRUE)
mapview::mapview(list(ctg,shp), layer.name = c("catalog","roads"),
color = "red", map.type = "Esri.WorldImagery")
#--- test on single road ---#
roadx <- shp %>%
dplyr::filter(OBJECTID == 30032)
ctgx <- st_intersects(ctg,roadx)
#--- test on single road ---#
roadx <- shp %>%
dplyr::filter(OBJECTID == 30032)
ctgx <- st_intersects(ctg@polygons,roadx)
ctg@polygons
ctgx <- st_intersects(st_as_sf(ctg@polygons),roadx)
#--- test on single road ---#
roadx <- shp %>%
dplyr::filter(OBJECTID == 30032)
mapview::mapview(list(ctg,roadx), layer.name = c("catalog","road"),
color = "red", map.type = "Esri.WorldImagery")
m1 <- mapview::mapview(roadx,
layer.name = "road",
color = "red", map.type = "Esri.WorldImagery")
coords <- c(-81.89212,
47.93482)
m1@map %>% setView(coords[1], coords[2], zoom = 17)
m1 <- mapview::mapview(list(ctg,roadx), layer.name = c("catalog","road"),
color = "red", map.type = "Esri.WorldImagery")
coords <- c(-81.89212,
47.93482)
m1@map %>% setView(coords[1], coords[2], zoom = 17)
#--- test on single road ---#
roady <- shp %>%
dplyr::filter(OBJECTID == 29976)
m2 <- mapview::mapview(list(ctg,roady), layer.name = c("catalog","road"),
color = "red", map.type = "Esri.WorldImagery")
coords <- c(-81.89471,
47.93648)
m2@map %>% setView(coords[1], coords[2], zoom = 17)
options(MFFProads.debug.finding = TRUE)
options(MFFProads.debug.measuring = FALSE)
options(MFFProads.debug.metrics = FALSE)
res1 <- measure_road(road, ctg, mffproads_default_parameters, relocate = TRUE)
options(MFFProads.debug.finding = TRUE)
options(MFFProads.debug.measuring = FALSE)
options(MFFProads.debug.metrics = FALSE)
res1 <- measure_road(road, ctg, mffproads_default_parameters, relocate = TRUE)
options(MFFProads.debug.finding = TRUE)
options(MFFProads.debug.measuring = FALSE)
options(MFFProads.debug.metrics = FALSE)
res1 <- measure_road(road, ctg, mffproads_default_parameters, relocate = TRUE)
#--- test on single road ---#
roadx <- shp %>%
dplyr::filter(OBJECTID == 29976)
m2 <- mapview::mapview(list(ctg,roadx), layer.name = c("catalog","road"),
color = "red", map.type = "Esri.WorldImagery")
coords <- c(-81.89471,
47.93648)
m2@map %>% setView(coords[1], coords[2], zoom = 17)
options(MFFProads.debug.finding = TRUE)
options(MFFProads.debug.measuring = FALSE)
options(MFFProads.debug.metrics = FALSE)
res1 <- measure_road(roadx, ctg, mffproads_default_parameters, relocate = TRUE)
options(MFFProads.debug.finding = TRUE)
options(MFFProads.debug.measuring = FALSE)
options(MFFProads.debug.metrics = FALSE)
res1 <- measure_road(roadx, ctg, mffproads_default_parameters, relocate = TRUE)
options(MFFProads.debug.finding = FALSE)
options(MFFProads.debug.measuring = TRUE)
options(MFFProads.debug.metrics = FALSE)
res1 <- measure_road(roadx, ctg, mffproads_default_parameters, relocate = TRUE)
library(magick)
install.packages("magick")
## list file names and read in
imgs <- list.files("F:\\_2021_MFPProads\\roads_spl\\img\\detect", full.names = TRUE)
lirbary(magick)
library(magick)
## list file names and read in
imgs <- list.files("F:\\_2021_MFPProads\\roads_spl\\img\\detect", full.names = TRUE)
img_list <- lapply(imgs, image_read)
img_list
## animate at 2 frames per second
img_animated <- image_animate(img_joined, fps = 2)
## join the images together
img_joined <- image_join(img_list)
img_joined
## save to disk
image_write(image = img_joined,
path = "F:\\_2021_MFPProads\\roads_spl\\img\\detect\\detect.gif")
## animate at 2 frames per second
img_animated <- image_animate(img_joined, fps = 1)
## view animated image
img_animated
## save to disk
image_write(image = img_animated,
path = "F:\\_2021_MFPProads\\roads_spl\\img\\detect\\detect.gif")
## list file names and read in
imgs <- list.files("F:\\_2021_MFPProads\\roads_spl\\img\\measure", full.names = TRUE)
img_list <- lapply(imgs, image_read)
## join the images together
img_joined <- image_join(img_list)
## animate at 2 frames per second
img_animated <- image_animate(img_joined, fps = 1)
## view animated image
img_animated
## save to disk
image_write(image = img_animated,
path = "F:\\_2021_MFPProads\\roads_spl\\img\\measure\\measure.gif")
options(MFFProads.debug.finding = FALSE)
options(MFFProads.debug.measuring = TRUE)
options(MFFProads.debug.metrics = TRUE)
res1 <- measure_road(roadx, ctg, mffproads_default_parameters, relocate = TRUE)
options(MFFProads.debug.finding = FALSE)
options(MFFProads.debug.measuring = FALSE)
options(MFFProads.debug.metrics = TRUE)
res1 <- measure_road(roadx, ctg, mffproads_default_parameters, relocate = TRUE)
## list file names and read in
imgs <- list.files("F:\\_2021_MFPProads\\roads_spl\\img\\measure", full.names = TRUE)
img_list <- lapply(imgs, image_read)
## join the images together
img_joined <- image_join(img_list)
## animate at 2 frames per second
img_animated <- image_animate(img_joined, fps = 0.25)
## view animated image
img_animated
## save to disk
image_write(image = img_animated,
path = "F:\\_2021_MFPProads\\roads_spl\\img\\measure\\measure.gif")
## list file names and read in
imgs <- list.files("F:\\_2021_MFPProads\\roads_spl\\img\\detect", full.names = TRUE)
## list file names and read in
imgs <- list.files("F:\\_2021_MFPProads\\roads_spl\\img\\detect", full.names = TRUE)
img_list <- lapply(imgs, image_read)
## join the images together
img_joined <- image_join(img_list)
## animate at 2 frames per second
img_animated <- image_animate(img_joined, fps = 0.25)
## view animated image
img_animated
## save to disk
image_write(image = img_animated,
path = "F:\\_2021_MFPProads\\roads_spl\\img\\detect\\detect.gif")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
purl("04-demo.Rmd")
knitr::purl("04-demo.Rmd")
#--- load in required libraries ---#
library(lidR)
library(sf)
library(MFFProads)
library(dplyr)
library(leaflet)
#--- read in laz and road shapefile ---#
ctg <- readLAScatalog("\\FRST-FRM-2231S/1_Normalized")
#--- read in laz and road shapefile ---#
ctg <- readLAScatalog("\\\\FRST-FRM-2231S/1_Normalized")
#--- read in laz and road shapefile ---#
ctg <- readLAScatalog("\\\\FRST-FRM-2231S\\1_Normalized")
#--- read in laz and road shapefile ---#
ctg <- readLAScatalog("\\\\FRST-FRM-2231S\\1_Normalized")
#--- read in laz and road shapefile ---#
ctg <- readLAScatalog("//FRST-FRM-2231S/1_Normalized")
shp <- st_read("Z:/SPL_Roads/data/Romeo/Roads/RMF_roads.shp",quiet=TRUE)
#--- read in laz and road shapefile ---#
ctg <- readLAScatalog("W:/")
mapview::mapview(list(ctg,shp), layer.name = c("catalog","roads"),
color = "red", map.type = "Esri.WorldImagery")
library(lidR)
library(sf)
library(MFFProads)
library(dplyr)
library(leaflet)
remotes::install_github("Jean-Romain/MFFProads", auth_token = "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")
#--- load in required libraries ---#
library(lidR)
library(sf)
library(MFFProads)
library(dplyr)
library(leaflet)
mapview::mapview(list(ctg,shp), layer.name = c("catalog","roads"),
color = "red", map.type = "Esri.WorldImagery")
install.packages("leaflet.providers")
library(leaflet.providers)
mapview::mapview(list(ctg,shp), layer.name = c("catalog","roads"),
color = "red", map.type = "Esri.WorldImagery")
shp
shp %>%
dplyr::filter(RDTYPE == O)
shp %>%
dplyr::filter(RDTYPE == "O")
#--- test on single road ---#
roadx <- shp %>%
dplyr::filter(RDTYPE == "O") %>%
dplyr::filter(OBJECTID == 2847)
## ---- echo = FALSE-------------------------------------------------------------------------------------------
m2 <- mapview::mapview(list(ctg,roadx), layer.name = c("catalog","road"),
color = "red", map.type = "Esri.WorldImagery")
m2
#--- test on single road ---#
roadx <- shp %>%
dplyr::filter(RDTYPE == "O") %>%
dplyr::filter(OBJECTID == 16543)
mapview::mapview(list(ctg,roadx), layer.name = c("catalog","road"),
color = "red", map.type = "Esri.WorldImagery")
#--- test on single road ---#
roadx <- shp %>%
dplyr::filter(RDTYPE == "O") %>%
dplyr::filter(OBJECTID == 16543)
## ---- echo = FALSE-------------------------------------------------------------------------------------------
m2 <- mapview::mapview(list(ctg,roadx), layer.name = c("catalog","road"),
color = "red", map.type = "Esri.WorldImagery")
roadx
#--- test on single road ---#
roadx <- shp %>%
dplyr::filter(OBJECTID == 16543)
mapview::mapview(list(ctg,roadx), layer.name = c("catalog","road"),
color = "red", map.type = "Esri.WorldImagery")
## #--- find the roads ---#
rd1 <- measure_road(roadx, ctg, mffproads_default_parameters, relocate = TRUE)
roadx
shp %>%
dplyr::filter(OBJECTID == 16845)
#--- test on single road ---#
roadx <- shp %>%
dplyr::filter(OBJECTID == 16845) %>%
st_cast(., "LINESTRING")
roadx
#--- test on single road ---#
roadx <- shp %>%
dplyr::filter(OBJECTID == 16845) %>%
st_cast(., "LINESTRING")
## #--- find the roads ---#
rd1 <- measure_road(roadx, ctg, mffproads_default_parameters, relocate = TRUE)
rd1
plot(rd1)
measure_road(roadx, ctg, mffproads_default_parameters, relocate = TRUE)
?measure_road
plot(st_geometry(roadx), col = "red") # Inaccurate road track
plot(st_geometry(rd1), col = "blue", add = TRUE) # Corrected road track
plot(st_geometry(roadx), col = "red") # Inaccurate road track
plot(st_geometry(rd1), col = "blue", add = TRUE) # Corrected road track
#--- test on single road ---#
roadx <- shp %>%
dplyr::filter(OBJECTID == 16318) %>%
st_cast(., "LINESTRING")
## ---- echo = FALSE-------------------------------------------------------------------------------------------
m2 <- mapview::mapview(list(ctg,roadx), layer.name = c("catalog","road"),
color = "red", map.type = "Esri.WorldImagery")
m2
## #--- find the roads ---#
rd1 <- measure_road(roadx, ctg, mffproads_default_parameters)
plot(ctg@polygons)
ctg@polygons
st_write(ctg, "Z:\\SPL_Roads\\data\\Romeo\\SPL_coverage.shp")
st_write(as.spatial(ctg), "Z:\\SPL_Roads\\data\\Romeo\\SPL_coverage.shp")
as.spatial(ctg)
st_write(st_as_sf(as.spatial(ctg)), "Z:\\SPL_Roads\\data\\Romeo\\SPL_coverage.shp")
ctg2 <- readLAScatalog("F:\\roads_demo")
mapview::mapview(list(ctg2,shp), layer.name = c("catalog","roads"),
color = "red", map.type = "Esri.WorldImagery")
ctg <- readLAScatalog("F:/roads_demo")
shp <- st_read("F:/roads_demo/roads_demo_sub.shp",quiet=TRUE)
mapview::mapview(list(ctg,shp), layer.name = c("catalog","roads"),
color = "red", map.type = "Esri.WorldImagery")
#--- test on single road ---#
roadx <- shp
shp
shp$OBJECTID
#--- test on single road ---#
roadx <- shp %>%
dplyr::filter(OBJECTID == 1335) %>%
st_cast(., "LINESTRING")
## ---- echo = FALSE-------------------------------------------------------------------------------------------
m2 <- mapview::mapview(list(ctg,roadx), layer.name = c("catalog","road"),
color = "red", map.type = "Esri.WorldImagery")
m2
## #--- find the roads ---#
rd1 <- measure_road(roadx, ctg, mffproads_default_parameters)
rd1
#--- test on single road ---#
roadx <- shp %>%
dplyr::filter(OBJECTID == 1375) %>%
st_cast(., "LINESTRING")
## ---- echo = FALSE-------------------------------------------------------------------------------------------
mapview::mapview(list(ctg,roadx), layer.name = c("catalog","road"),
color = "red", map.type = "Esri.WorldImagery")
## #--- find the roads ---#
rd1 <- measure_road(roadx, ctg, mffproads_default_parameters)
options(MFFProads.debug.finding = TRUE)
options(MFFProads.debug.measuring = FALSE)
options(MFFProads.debug.metrics = FALSE)
res <- measure_road(roadx, ctg, mffproads_default_parameters, relocate = TRUE)
ctg <- readLAScatalog("F:/roads_demo")
shp <- st_read("F:/roads_demo/roads_demo_sub.shp",quiet=TRUE)
mapview::mapview(list(ctg,shp), layer.name = c("catalog","roads"),
color = "red", map.type = "Esri.WorldImagery")
#--- test on single road ---#
roadx <- shp %>%
dplyr::filter(OBJECTID == 1375) %>%
st_cast(., "LINESTRING")
options(MFFProads.debug.finding = TRUE)
options(MFFProads.debug.measuring = FALSE)
options(MFFProads.debug.metrics = FALSE)
res <- measure_road(roadx, ctg, mffproads_default_parameters, relocate = TRUE)
res
shp %>%
dplyr::filter(OBJECTID == 1375)
shp
shp$RDTYPE
shp %>%
dplyr::filter(OBJECTID == 1283) %>%
st_cast(., "LINESTRING")
#--- test on single road ---#
roadx <- shp %>%
dplyr::filter(OBJECTID == 1283) %>%
st_cast(., "LINESTRING")
## ---- echo = FALSE-------------------------------------------------------------------------------------------
mapview::mapview(list(ctg,roadx), layer.name = c("catalog","road"),
color = "red", map.type = "Esri.WorldImagery")
mapview::mapview(list(ctg,shp), layer.name = c("catalog","roads"),
color = "red", map.type = "Esri.WorldImagery")
#--- test on single road ---#
roadx <- shp %>%
dplyr::filter(OBJECTID == 1353) %>%
st_cast(., "LINESTRING")
mapview::mapview(list(ctg,roadx), layer.name = c("catalog","road"),
color = "red", map.type = "Esri.WorldImagery")
# finding the road
options(MFFProads.debug.finding = TRUE)
options(MFFProads.debug.measuring = FALSE)
options(MFFProads.debug.metrics = FALSE)
res1 <- measure_road(roadx, ctg, mffproads_default_parameters, relocate = TRUE)
# finding the road
options(MFFProads.debug.finding = TRUE)
options(MFFProads.debug.measuring = FALSE)
options(MFFProads.debug.metrics = FALSE)
res1 <- measure_road(roadx, ctg, mffproads_default_parameters, relocate = TRUE)
install.packages("Rmarkdown")
install.packages("Rtools")
library(tools, lib.loc = "C:/Program Files/R/R-4.1.1/library")
install.packages("Rmarkdown")
